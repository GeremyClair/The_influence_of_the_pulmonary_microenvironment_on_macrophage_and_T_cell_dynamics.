knitr::opts_chunk$set(fig.width=10, fig.height=6, echo = TRUE, results = TRUE, warning = FALSE, message=FALSE)
options(repos=structure(c(CRAN="https:/cloud.r-project.org/")))
setwd("~/Documents/GitHub/Effect_of_glomerular_disease_on_the_podocyte_cell_cycle/")
getwd()
library("RomicsProcessor")
library("proteinminion")
library("DT") #for the rendering of the enrichment tables
if(!file.exists("./03_output_files/Uniprot_Mus_musculus_proteome_UP000000589_2021_06_28.fasta")){
download_UniProtFasta(proteomeID = "UP000000589",reviewed = T,export = TRUE, file="./03_output_files/Uniprot_Mus_musculus_proteome_UP000000589_2021_06_28.fasta")
}
UniProtFasta_info<-UniprotFastaParser(file = "./03_output_files/Uniprot_Mus_musculus_proteome_UP000000589_2021_06_28.fasta")
write.csv(UniProtFasta_info, "./03_output_files/UniProtFasta_info.csv")
if(file.exists("./03_output_files/UniprotTable_Mus_musculus_proteome_UP000000589_2021_06_28.csv")){
UniProtTable<-read.csv("./03_output_files/UniprotTable_Mus_musculus_proteome_UP000000589_2021_06_28.csv")
}else{
download_UniProtTable(proteomeID = "UP000000589",reviewed = T)
write.csv(UniProtTable,("./03_output_files/UniprotTable_Mus_musculus_proteome_UP000000589_2021_06_28.csv"),row.names=FALSE)
}
if(file.exists("./03_output_files/UniProtTable_GO.csv")){
UniProtTable_GO<-read.csv(file="./03_output_files/UniProtTable_GO.csv")
}else{
generate_UniProtTable_GO()
write.csv(UniProtTable_GO,file="./03_output_files/UniProtTable_GO.csv",row.names=FALSE)
}
if(file.exists("./03_output_files/UniProtTable_KEGG.csv")){
UniProtTable_KEGG<-read.csv(file="./03_output_files/UniProtTable_KEGG.csv")
}else{
generate_UniProtTable_KEGG()
write.csv(UniProtTable_KEGG,file="./03_output_files/UniProtTable_KEGG.csv",row.names=FALSE)
}
data<-extractMaxQuant("~/Documents/05 - Lungmap/36 - LM_IR/01_source_files/proteinGroups.txt",quantification_type = "LFQ",cont.rm = T,site.rm = T,rev.rm = T)
data[,1]<-gsub("\\;.*","",data[,1])
data[,1]<-gsub(".*\\|","",data[,1])
representative_ID <- data[,1]
IDsdetails<-cbind(Identifiers=representative_ID, extractMaxQuantIDs("./01_source_files/proteinGroups.txt",cont.rm = T,site.rm = T,rev.rm = T))
metadata<- read.csv(file = "./01_source_files/metadata.csv")
write.csv(extractMaxQuantIDs("./01_source_files/proteinGroups.txt",cont.rm = T,site.rm = T,rev.rm = T),"./03_output_files/MaxQuantIDS.csv")
romics_proteins<- romicsCreateObject(data,metadata,main_factor = "Condition")
romics_proteins<- romicsZeroToMissing(romics_proteins)
romicsPlotMissing(romics_proteins)
romics_proteins<-log2transform(romics_proteins)
distribBoxplot(romics_proteins)
romics_proteins<-romicsFilterMissing(romics_proteins,percentage_completeness = 60)
print(paste0(nrow(romics_proteins$data),"/", nrow(romics_proteins$original_data)," proteins remained after filtering", " (",round(nrow(romics_proteins$data)/nrow(romics_proteins$original_data)*100,2),"%)."))
romicsPlotMissing(romics_proteins)
romics_proteins<-medianCenterSample(romics_proteins)
distribBoxplot(romics_proteins)
romicsHclust(romics_proteins)
indPCAplot(romics_proteins, ncp=5,plotType = "percentage")
indPCAplot(romics_proteins, ncp=5,plotType = "individual",Xcomp=1,Ycomp =2)
indPCAplot(romics_proteins, ncp=5, plotType = "individual",Xcomp=2,Ycomp =3)
imputeMissingEval(romics_proteins,nb_stdev = 2,width_stdev = 0.5, bin=1)
romics_proteins<-imputeMissing(romics_proteins,nb_stdev = 2,width_stdev = 0.5)
romicsHclust(romics_proteins)
indPCAplot(romics_proteins, plotType = "percentage")
indPCAplot(romics_proteins, plotType = "individual",Xcomp=1,Ycomp =2)
indPCAplot(romics_proteins,  plotType = "individual",Xcomp=2,Ycomp =3)
indPCA3D(romics_proteins)
romics_proteins<-romicsMean(romics_proteins)
romics_proteins<-romicsSd(romics_proteins)
romics_proteins<-romicsANOVA(romics_proteins)
romicsHeatmap(romics_proteins,variable_hclust_number = 4,ANOVA_filter = "p", p=0.05,sample_hclust = F)
romics_proteins<-romicsVariableHclust(romics_proteins,clusters = 4,ANOVA_filter = "p",p= 0.05,plot = F)
romics_proteins<-romicsZscores(romics_proteins)
Enrichments<-romicsEnrichement(romics_proteins,cluster_filter = "hclust_clusters")
Enrichments <- Enrichments[Enrichments$pval<0.1 &Enrichments$fold_change>=1,]
datatable(Enrichments)
write.table(Enrichments,file="03_output_files/Enrichments_ANOVA_clusts.txt",sep="\t",row.names = F)
romics_proteins<-romicsTtest(romics_proteins,percentage_completeness = 60)
romicsVolcano(romics_proteins,p_type = "p",min_fold_change = 0)
pFrequencyPlot(romics_proteins)
romics_proteins<-romicsTtest(romics_proteins,percentage_completeness = 60)
romicsVolcano(romics_proteins,p_type = "p",min_fold_change = 0)
up_N_Vs_C <- rownames(romics_proteins$statistics)[romics_proteins$statistics$N_vs_C_Ttest_p<0.05&romics_proteins$statistics$`log(N/C)`>0&!is.na(romics_proteins$statistics$N_vs_C_Ttest_p)]
down_N_Vs_C <- rownames(romics_proteins$statistics)[romics_proteins$statistics$N_vs_C_Ttest_p<0.05&romics_proteins$statistics$`log(N/C)`<0&!is.na(romics_proteins$statistics$N_vs_C_Ttest_p)]
universe <- rownames(romics_proteins$statistics)
up_N_Vs_C_E_GO<-cbind(enriched_for="up_N_Vs_C", UniProt_GO_EASE(up_N_Vs_C,universe))
down_N_Vs_C_E_GO<-cbind(enriched_for="down_N_Vs_C", UniProt_GO_EASE(down_N_Vs_C,universe))
up_N_Vs_C_E_KEGG<-cbind(enriched_for="up_N_Vs_C", UniProt_KEGG_EASE(up_N_Vs_C,universe))
down_N_Vs_C_E_KEGG<-cbind(enriched_for="down_N_Vs_C", UniProt_KEGG_EASE(down_N_Vs_C,universe))
Comparison1_E<-rbind(up_N_Vs_C_E_GO,down_N_Vs_C_E_GO,up_N_Vs_C_E_KEGG,down_N_Vs_C_E_KEGG)
Comparison1_E<-Comparison1_E[Comparison1_E$pval<0.05&Comparison1_E$fold_change>1,]
datatable(Comparison1_E)
up_R_Vs_C <- rownames(romics_proteins$statistics)[romics_proteins$statistics$R_vs_C_Ttest_p<0.05&romics_proteins$statistics$`log(R/C)`>0&!is.na(romics_proteins$statistics$R_vs_C_Ttest_p)]
down_R_Vs_C <- rownames(romics_proteins$statistics)[romics_proteins$statistics$R_vs_C_Ttest_p<0.05&romics_proteins$statistics$`log(R/C)`<0&!is.na(romics_proteins$statistics$R_vs_C_Ttest_p)]
up_R_Vs_C_E_GO<-cbind(enriched_for="up_R_Vs_C", UniProt_GO_EASE(up_R_Vs_C,universe))
down_R_Vs_C_E_GO<-cbind(enriched_for="down_R_Vs_C", UniProt_GO_EASE(down_R_Vs_C,universe))
up_R_Vs_C_E_KEGG<-cbind(enriched_for="up_R_Vs_C", UniProt_KEGG_EASE(up_R_Vs_C,universe))
down_R_Vs_C_E_KEGG<-cbind(enriched_for="down_R_Vs_C", UniProt_KEGG_EASE(down_R_Vs_C,universe))
Comparison2_E<-rbind(up_R_Vs_C_E_GO,down_R_Vs_C_E_GO,up_R_Vs_C_E_KEGG,down_R_Vs_C_E_KEGG)
Comparison2_E<-Comparison2_E[Comparison2_E$pval<0.05&Comparison2_E$fold_change>1,]
datatable(Comparison2_E)
up_R_Vs_N <- rownames(romics_proteins$statistics)[romics_proteins$statistics$R_vs_N_Ttest_p<0.05&romics_proteins$statistics$`log(R/N)`>0&!is.na(romics_proteins$statistics$R_vs_N_Ttest_p)]
down_R_Vs_N <- rownames(romics_proteins$statistics)[romics_proteins$statistics$R_vs_N_Ttest_p<0.05&romics_proteins$statistics$`log(R/N)`<0&!is.na(romics_proteins$statistics$R_vs_N_Ttest_p)]
up_R_Vs_N_E_GO<-cbind(enriched_for="up_R_Vs_N", UniProt_GO_EASE(up_R_Vs_N,universe))
down_R_Vs_N_E_GO<-cbind(enriched_for="down_R_Vs_N", UniProt_GO_EASE(down_R_Vs_N,universe))
up_R_Vs_N_E_KEGG<-cbind(enriched_for="up_R_Vs_N", UniProt_KEGG_EASE(up_R_Vs_N,universe))
down_R_Vs_N_E_KEGG<-cbind(enriched_for="down_R_Vs_N", UniProt_KEGG_EASE(down_R_Vs_N,universe))
Comparison3_E<-rbind(up_R_Vs_N_E_GO,down_R_Vs_N_E_GO,up_R_Vs_N_E_KEGG,down_R_Vs_N_E_KEGG)
Comparison3_E<-Comparison3_E[Comparison3_E$pval<0.05&Comparison3_E$fold_change>1,]
datatable(Comparison3_E)
Comparison1_E<-cbind(comparison="Comparison1",Comparison1_E)
Comparison2_E<-cbind(comparison="Comparison2",Comparison2_E)
Comparison3_E<-cbind(comparison="Comparison3",Comparison3_E)
Enrichment_t<-rbind(Comparison1_E,Comparison2_E,Comparison3_E)
write.table(Enrichment_t,file="03_output_files/Enrichment_comparisons_ttests.txt",sep="\t",row.names = F)
